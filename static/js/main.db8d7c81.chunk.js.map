{"version":3,"sources":["config/unsplash.js","utils/options.js","contextProvider/AppContext.js","contextProvider/AppContextProvider.js","components/Card.js","components/Wraper.js","components/Spinner.js","components/Error.js","components/EmtyResult.js","components/Photo.js","components/PhotoGallery.js","components/SearchBar.js","components/FilterDropdown.js","components/SearchControll.js","components/MainView.js","App.js","serviceWorker.js","index.js"],"names":["unsplash","Unsplash","applicationId","secret","orderedByOptions","AppContext","React","createContext","AppContextProvider","state","currentPage","pageSize","orderedBy","photos","loading","error","queryTerm","userInput","isPhotoOpened","total","photo","isImgLoading","getListPhotos","_callee","_this$state","res","regenerator_default","a","wrap","_context","prev","next","_this","setState","listPhotos","sent","json","t0","console","log","stop","searchPhotosByTerm","_callee2","keyword","_this$state2","searchResult","_context2","search","results","handleTermSearch","value","updateUserInput","changeOrderedBy","option","changePageSize","changePage","page","openPhoto","closePhoto","setImgLoading","this","_","prevState","_this$state3","react_default","createElement","Provider","props","children","Component","CardContainer","styled","div","_templateObject","Img","img","_templateObject2","Card","_ref","onClick","alt","src","urls","regular","Wraper_templateObject","antIcon","icon","type","style","fontSize","spin","Spinner","Wraper","indicator","Error","EmptyResult","Photo","Photo_templateObject","PhotoImage","url","handleOnLoad","onLoad","Gallery","PhotoGallery_templateObject","PageContainer","PhotoGallery_templateObject2","PhotoModal","Modal","_templateObject3","PhotoGallery","_useContext","useContext","components_Error","components_Spinner","length","Fragment","centered","width","footer","closable","onCancel","e","visible","components_Photo","full","map","components_Card","key","id","pagination","showSizeChanger","defaultCurrent","pageSizeOptions","current","onChange","onShowSizeChange","EmtyResult","Search","Input","SearchBar","enterButton","placeholder","target","onSearch","Option","Select","FilterDropdown","es_select","defaultValue","marginLeft","SearchControllContainer","SearchControll_templateObject","SearchControll","components_SearchBar","components_FilterDropdown","Container","MainView_templateObject","MainView","components_SearchControll","components_PhotoGallery","App","contextProvider_AppContextProvider","components_MainView","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db8d7c81.chunk.js","sourcesContent":["import Unsplash from 'unsplash-js';\n\nconst unsplash = new Unsplash({\n  applicationId: \"8f3df15296907de99132e2257dea5c4a9e16dbe87e7ae9e078ee0c543cd7c66f\",\n  secret: \"ccff5c77adf78b52dc5e546678fbaa8365874b901ea8154df139a1995ec6a606\"\n});\n\nexport default unsplash;","const POPULAR = \"popular\"\nconst OLDEST = \"oldest\"\nconst LATEST = \"latest\"\n\nexport const orderedByOptions = [\n  POPULAR,\n  OLDEST,\n  LATEST\n]","import React from 'react'\n\nexport const AppContext = React.createContext();\n","import React, { Component } from 'react'\n\nimport unsplash from '../config/unsplash'\nimport { orderedByOptions } from '../utils/options'\nimport { AppContext } from './AppContext'\n\nclass AppContextProvider extends Component {\n  state = {\n    currentPage: 1,\n    pageSize: 10,\n    orderedBy: orderedByOptions[0],\n    photos: [],\n    loading: true,\n    error: false,\n    queryTerm: \"\",\n    userInput: \"\",\n    isPhotoOpened: false,\n    total: 0,\n    photo: null,\n    isImgLoading: true\n  }\n\n  componentDidMount() {\n    this.getListPhotos()\n  }\n\n  componentDidUpdate(_, prevState) {\n    const {currentPage, pageSize, orderedBy, queryTerm} = this.state\n    if (currentPage !== prevState.currentPage\n      || pageSize !== prevState.pageSize\n      || orderedBy !== prevState.orderedBy\n      || queryTerm !== prevState.queryTerm\n    ) {\n      if (queryTerm) {\n        this.searchPhotosByTerm(queryTerm)\n      } else {\n        this.getListPhotos()\n      }\n    }\n  }\n\n  getListPhotos = async () => {\n    this.setState({ loading: true })\n    const { currentPage, pageSize, orderedBy } = this.state\n    try {\n      const res = await unsplash.photos.listPhotos(currentPage, pageSize, orderedBy)\n      const photos = await res.json()\n\n      this.setState({\n        photos,\n        loading: false,\n        total: 100\n      })\n    } catch (err) {\n      this.setState({\n        loading: false,\n        error: true\n      })\n      console.log(err)\n    }\n  }\n\n  searchPhotosByTerm = async (keyword) => {\n    this.setState({ loading: true })\n    const { currentPage, pageSize } = this.state\n    try {\n      const res = await unsplash.search.photos(keyword, currentPage, pageSize)\n      const searchResult = await res.json()\n      this.setState({\n        total: searchResult.total,\n        photos: searchResult.results,\n        loading: false,\n      })\n    } catch (err) {\n      this.setState({\n        loading: false,\n        error: true,\n      })\n      console.log(err)\n    }\n  }\n\n  handleTermSearch = (value) => {\n    this.setState({\n      queryTerm: value,\n      currentPage: 1\n    })\n  }\n\n  updateUserInput = (value) => {\n    this.setState({ userInput: value })\n  }\n\n  changeOrderedBy = (option) => {\n    this.setState({\n      orderedBy: option,\n      currentPage: 1,\n      userInput: \"\",\n      queryTerm: \"\"\n    })\n  }\n\n  changePageSize = (pageSize) => {\n    this.setState({ pageSize })\n  }\n\n  changePage = (page) => {\n    this.setState({ currentPage: page })\n  }\n\n  openPhoto = (photo) => {\n    this.setState({\n      photo,\n      isPhotoOpened: true\n    })\n  }\n\n  closePhoto = () => {\n    this.setState({\n      isPhotoOpened: false,\n      isImgLoading: true\n    })\n  }\n\n  setImgLoading = (isImgLoading) => {\n    this.setState({ isImgLoading })\n  }\n\n  render() {\n    return (\n      <AppContext.Provider value={{\n        state: this.state,\n        orderedByOptions,\n        getListPhotos: this.getListPhotos,\n        changeOrderedBy: this.changeOrderedBy,\n        changePage: this.changePage,\n        changePageSize: this.changePageSize,\n        handleTermSearch: this.handleTermSearch,\n        updateUserInput: this.updateUserInput,\n        openPhoto: this.openPhoto,\n        closePhoto: this.closePhoto,\n        setImgLoading: this.setImgLoading\n      }}>\n        {this.props.children}\n      </AppContext.Provider>\n    )\n  }\n}\n\nexport default AppContextProvider;","import React from 'react'\nimport styled from 'styled-components'\n\nconst CardContainer = styled.div`\n  display: inline-block;\n  width: 100%;\n  margin: 0 0 2px;\n  &:hover {\n    box-shadow: 0 2px 8px rgba(0,0,0,0.30);\n    border-color: rgba(0,0,0,0.09);\n    cursor: pointer;\n  }\n`\n\nexport const Img = styled.img`\n  max-width: 100%;\n  height: auto;\n  display: block\n`\n\nconst Card = ({ photo, openPhoto }) => {\n  return (\n    <CardContainer onClick={() => openPhoto(photo)}>\n      <Img alt=\"photo\" src={photo.urls.regular} />\n    </CardContainer>\n  );\n}\n  \nexport default Card;\n","import styled from 'styled-components'\n\nexport default styled.div`\n  display: flex;\n  height: 100vh;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`","import React from 'react'\nimport { Spin, Icon } from 'antd'\n\nimport Wraper from './Wraper'\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nconst Spinner = () => (\n  <Wraper>\n    <Spin indicator={antIcon} />\n  </Wraper>\n)\n\nexport default Spinner;","import React from 'react'\nimport Wraper from './Wraper'\n\nconst Error = () => (\n  <Wraper>\n    Something went wrong\n  </Wraper>\n)\n\nexport default Error;","import React from 'react'\nimport Wraper from './Wraper'\n\nconst EmptyResult = () => (\n  <Wraper>\n    No result\n  </Wraper>\n)\n\nexport default EmptyResult;","\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Photo = styled.img`\n  height: 100%;\n  width: 100%;\n`\n\nconst PhotoImage = ({ url, handleOnLoad }) => (\n  <Photo src={url} onLoad={() => {handleOnLoad(false)}} />\n)\n\nexport default PhotoImage;","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Pagination, Modal } from 'antd';\n\nimport { AppContext } from '../contextProvider/AppContext'\nimport Card from './Card'\nimport Spinner from './Spinner'\nimport Error from './Error'\nimport EmptyResult from './EmtyResult'\nimport Photo from './Photo'\n\nconst Gallery = styled.div`\n  column-count: 3;\n`\n\nconst PageContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n`\n\nconst PhotoModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0px;\n  }\n  .ant-modal-content {\n    background-color: transparent;\n    box-shadow: none;\n  }\n`\n\nconst PhotoGallery = () => {\n  const {\n    state,\n    changePageSize,\n    changePage,\n    openPhoto,\n    closePhoto,\n    setImgLoading\n  } = useContext(AppContext)\n  if (state.error) return <Error />\n  if (state.loading) return <Spinner />\n  if (!state.loading && !state.photos.length) return <EmptyResult />\n\n  return (\n    <React.Fragment>\n      <Gallery>\n        <PhotoModal\n          centered\n          width=\"32%\"\n          footer={null}\n          closable={false}\n          onCancel={e => closePhoto()}\n          visible={state.isPhotoOpened}\n        >\n          {state.isPhotoOpened && state.isImgLoading && <Spinner />}\n          {state.isPhotoOpened &&\n            <Photo\n              url={state.photo.urls.full}\n              handleOnLoad={setImgLoading}\n            />\n          }\n        </PhotoModal>\n        {state.photos.map(photo => \n          <Card\n            photo={photo}\n            key={photo.id}\n            openPhoto={openPhoto}\n          />\n        )}\n      </Gallery>\n      <PageContainer>\n        <Pagination\n          showSizeChanger\n          total={state.total}\n          defaultCurrent={1}\n          pageSize={state.pageSize}\n          pageSizeOptions={['10', '20', '30']}\n          current={state.currentPage}\n          onChange={(page) => {changePage(page)}}\n          onShowSizeChange={(_, pageSize) => {changePageSize(pageSize)}}\n        />\n      </PageContainer>\n    </React.Fragment>\n  )\n}\n\nexport default PhotoGallery","import React, { useContext } from 'react'\n\nimport { Input } from 'antd';\nimport { AppContext } from '../contextProvider/AppContext'\n\nconst Search = Input.Search;\n\nconst SearchBar = () => {\n  const { state, handleTermSearch, updateUserInput } = useContext(AppContext)\n\n  return (\n    <Search\n      enterButton\n      style={{width: \"40%\"}}\n      placeholder=\"search here...\"\n      onChange={(e) => updateUserInput(e.target.value)}\n      onSearch={value => handleTermSearch(value)}\n      value={state.userInput}\n    />\n  )\n}\n\nexport default SearchBar","import React, { useContext } from 'react'\nimport { Select } from 'antd';\n\nimport { AppContext } from '../contextProvider/AppContext'\nconst Option = Select.Option;\n\nconst FilterDropdown = () => {\n  const { changeOrderedBy, orderedByOptions } = useContext(AppContext)\n\n  return (\n    <Select\n      defaultValue={orderedByOptions[0]}\n      placeholder=\"Ordered By\"\n      style={{marginLeft: \"10px\", width: 150 }}\n    >\n      {orderedByOptions.map(option => (\n        <Option\n          key={option}\n          value={option}\n          onClick={() => changeOrderedBy(option)}\n        >\n          {option}\n        </Option>\n      ))}\n    </Select>\n  )\n}\n\nexport default FilterDropdown","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nimport SearchBar from './SearchBar'\nimport FilterDropdown from './FilterDropdown'\n\nconst SearchControllContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin: 10px;\n`\n\nclass SearchControll extends Component {\n\n  render () {\n    return (\n      <SearchControllContainer>\n        <SearchBar />\n        <FilterDropdown />\n      </SearchControllContainer>\n    )\n  }\n}\n\nexport default SearchControll","import React from 'react'\nimport styled from 'styled-components'\n\nimport PhotoGallery from './PhotoGallery'\nimport SearchControll from './SearchControll'\n\nconst Container = styled.div`\n  padding: 15px;\n`\n\nconst MainView = () => (\n  <Container>\n    <SearchControll />\n    <PhotoGallery />\n  </Container>\n)\n\nexport default MainView","import React from 'react'\n\nimport AppContextProvider from './contextProvider/AppContextProvider'\nimport MainView from './components/MainView'\nimport './App.css'\n\nconst App = () => (\n  <AppContextProvider>\n    <MainView />\n  </AppContextProvider>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}